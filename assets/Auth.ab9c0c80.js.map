{"version":3,"file":"Auth.ab9c0c80.js","sources":["../../src/@bricks/components/composables/animations.js","../../src/views/Login.vue","../../src/views/ForgotPass.vue","../../src/views/Auth.vue"],"sourcesContent":["import { nextTick } from \"vue\"\nimport { gsap } from \"gsap\"\n\nconst DURATION = .4\nconst EASE = 'power4.out'\n\nfunction nodeCycler (el, arr) {\n    if (el.dataset.anim) {\n        const [animType, duration=DURATION, delay=0, ease=EASE] = el.dataset.anim.split(';')\n        arr.push([el, animType, duration, delay, ease])\n    }\n    if (el.children) {\n        for (const kid of el.children) nodeCycler(kid, arr)\n    }\n    return arr\n}\n\nconst computeAnimObj = animType => {\n    switch (animType) {\n        case 'top':\n            return {y: '-100%', opacity: 0, filter: 'blur(10px)'}\n        case 'bottom':\n            return {y: '100%', opacity: 0, filter: 'blur(10px)'}\n        case 'right':\n            return {x: '100%', opacity: 0, filter: 'blur(10px)'}\n        case 'left':\n            return {x: '-100%', opacity: 0, filter: 'blur(10px)'}\n        case 'text': \n            return { x: -50, opacity: 0, delay: .5, stagger: .01, rotateX: 70}\n        default: \n            return {opacity: 0, scale: .4}\n    }\n}\n\nexport const animateIntro = async el => {\n    await nextTick()\n    const arr = []\n    nodeCycler(el.value, arr)\n    const t = gsap.timeline()\n    for (let [el, animType, duration, delay, ease] of arr) {\n        el = animType == 'text' ? el.querySelectorAll('span') : el\n        t.from(el, {\n            ...computeAnimObj(animType),\n            ease,\n            delay,\n            duration\n        })\n    }\n}","<template>\n<section>\n    <article class=\"welcome\" data-anim=\"bottom;.5;-.5\">\n        <div>Sign in</div>\n        <p>\n            Please enter the details below to access your account.\n        </p>\n    </article>\n    <br-transition name=\"dissolve\">\n    <div v-if=\"formWideError\" class=\"!w-full bg-danger-50 \">\n        <br-alert class=\"text-xs !w-content !mx-auto\" :show=\"true\" level=\"danger\">\n            {{ formWideError }}\n        </br-alert>\n    </div>\n    </br-transition>\n\n    <article class=\"auth-form\" data-anim=\"bottom;.5;-.3\">\n        <br-form name=\"login\" v-model=\"loginData\" v-bind=\"{schema, onFormErrors, onFormValid}\" submit-text=\"Sign in\" submitting-text=\"Signing in...\">\n            <template #after-fields>\n                <div class=\"br-link br-primary iom-login--after-fields\" @click=\"emits('update:requestedview', 'forgot')\">Forgot password</div>\n            </template>\n        </br-form>\n    </article>\n</section>\n</template>\n\n<script setup>\nimport { reactive, markRaw,ref, onMounted } from \"vue\"\nimport {string} from 'yup'\nimport {login} from '../http'\nimport Password from '~icons/la/unlock-alt'\nimport Email from '~icons/la/at'\nimport { useRouter } from \"vue-router\"\n\nconst emits = defineEmits(['update:requestedview'])\nconst props = defineProps(['requestedview'])\n\nconst formWideError = ref(null)\nconst router = useRouter()\n\nconst loginData = reactive({})\nconst schema = {\n    form: {\n        type: 'stacked-int',\n        save: 'perForm'\n    },\n    fields: [\n        {\n            name: 'email',\n            label: 'Email address',\n            type: 'email',\n            beforeIcon: markRaw(Email),\n            parentClasses: 'br-span-full',\n            rules: string().email().required(),\n            placeholder: \"Enter your email\",\n        },\n        {\n            name: 'password',\n            rules: string().required(),\n            beforeIcon: markRaw(Password),\n            parentClasses: 'br-span-full',\n            placeholder: '•••',\n            type: 'password',\n            label: 'Password'\n        }\n    ]\n}\n\nconst onFormErrors = ({values, errors, results, notify}) => {\n    // notify(`This form contains <b>${Object.keys(errors).length}</b> fields with errors`, 'Cannot proceed before all fields containing errors are corrected.', 'danger')\n}\n\nconst onFormValid = async (values, {setErrors, notify}) => {\n    const resp = await login(values.email, values.password)\n    const {status} = resp\n    if (status >= 400) {\n        setErrors({\n            email: ' ',\n            password: ' '\n        })\n        if (status === 403) formWideError.value = \"These credentials don't match our records.\"\n        return\n    }\n    if (status === 200) {\n        window.location.reload()\n    }\n}\n\n\n</script>\n\n<style lang=\"css\">\n\n.auth-form .br-form {\n    @apply !bg-transparent !h-full;\n}\n\n.iom-login--after-fields {\n    @apply transform !-translate-y-6 text-xs  text-left w-full;\n}\n\n\n\n</style>","<template>\n<section>\n    <template v-if=\"!submitted\">\n        <article class=\"welcome\" data-anim=\"bottom;.5;-.5\">\n            <div>Forgot password?</div>\n            <p>\n                No worries. It happens. Please enter below the email address associated with your account.\n            </p>\n        </article>\n        <article class=\"auth-form\" data-anim=\"bottom;.5;-.3\">\n            <br-form v-model=\"loginData\" name=\"forgot\" v-bind=\"{schema, onFormErrors, onFormValid}\" class=\"!bg-transparent !h-full\" submit-text=\"Reset password\" submitting-text=\"Resetting...\">\n            </br-form>\n        </article>\n    </template>\n    <section v-else class=\"auth-result\">\n        <br-alert v-model:show=\"submitted\" level=\"info\">\n            Now check your inbox.\n            <template #desc>\n                We have sent you a link to reset your password.\n            </template>\n        </br-alert>\n    </section>\n</section>\n</template>\n\n<script setup>\nimport { reactive, markRaw, ref } from \"vue\"\nimport {string} from 'yup'\nimport Email from '~icons/la/at'\n\nconst submitted = ref(false)\nconst loginData = ref({})\nconst schema = {\n    form: {\n        type: 'stacked',\n        save: 'perForm'\n    },\n    fields: [\n        {\n            name: 'email',\n            label: 'Email address',\n            type: 'email',\n            beforeIcon: markRaw(Email),\n            parentClasses: 'br-span-full',\n            rules: string().email().required(),\n            placeholder: \"Enter your email\",\n        }\n    ]\n}\n\nconst onFormErrors = ({values, errors, results, notify}) => {\n    // notify(`This form contains <b>${Object.keys(errors).length}</b> fields with errors`, 'Cannot proceed before all fields containing errors are corrected.', 'danger')\n}\n\nconst onFormValid = async (values, {setErrors, notify}) => {\n    submitted.value = true\n}\n\n</script>\n","<template>\n<section ref=\"form\" class=\"iom-auth-form w-full bg-blue-gray-100 text-dark-700 h-screen lg:(grid grid-cols-2)\" >\n    <header class=\"w-full pb-3 origin-top lg:(col-start-1 pt-[25vh]) relative bg-blend-darken\" data-anim=\"top;0.9;power4.in\" >\n        <br-transition name=\"dissolve\" :delay=\"0.5\">\n            <i-akar-icons-arrow-left v-if=\"activeView !== 'login'\" class=\"br-link go-back\" @click=\"activeView='login'\" />\n        </br-transition>\n        <div class=\"iom-logo\"></div>\n        <div class=\"lg:(relative w-[5vw] h-1.5 bg-white mx-auto mt-12 mb-8)\" data-anim=\"left;0.4;-0.4;power4.in\"></div>\n        <p data-anim=\"text;.3;-.4;power4.out\">\n            <span v-for=\"char of 'Field Survey Platform'\" :key=\"char\">{{char}}</span>\n        </p>\n    </header>\n\n    <br-transition name=\"horizontalBlurRight\">\n        <component :is=\"activeAuthComp\" v-model:requestedview=\"activeView\"></component>\n    </br-transition>\n    \n</section>\n</template>\n\n<script setup>\nimport { computed, onMounted, ref} from \"vue\"\nimport {useStore} from '../store'\nimport { animateIntro } from '../@bricks/components/composables'\nimport Auth from './Login.vue'\nimport ForgotPass from './ForgotPass.vue'\n\nconst compMap = {\n    login: Auth,\n    forgot: ForgotPass\n}\nconst store = useStore()\n\nconst activeAuthComp = computed(() => compMap[activeView.value])\nconst form = ref(null)\nconst activeView = ref('login')\n\nonMounted(() => {\n    animateIntro(form)\n})\n\n</script>"],"names":["gsap","string","Auth","ForgotPass"],"mappings":"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"}