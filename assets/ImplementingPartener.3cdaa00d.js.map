{"version":3,"file":"ImplementingPartener.3cdaa00d.js","sources":["../../src/views/ImplementingPartener.vue"],"sourcesContent":["<template>\n<section class=\"iom-impl-par pb-4 overflow-hidden mt-4\">\n    <article @click=\"openNewIPForm\" key=\"add\" class=\"w-full group py-1 px-4\" ref=\"addIP\">\n        <div class=\"overflow-hidden h-full flex items-center justify-center border-dashed bg-white transition-all cursor-pointer rounded-lg\" :class=\"[mode !== 'add' ? 'border-2 border-dark-200 hover:(bg-dark-50)' : 'transparent']\">\n            <br-transition name=\"verticalBlur\" class=\"w-full overflow-auto\" >\n                <div v-if=\"!mode\" class=\"flex flex-col items-center justify-center relative md:px-12 py-6 transform\">\n                    <i-carbon-folder-add class=\"text-dark-400 w-11 h-11\"></i-carbon-folder-add>\n                    <h5 class=\"text-dark-900 text-lg font-normal mt-3\"><span>+</span> Implementing Partner</h5>\n                </div>\n                <div v-else class=\"pt-2 w-full h-full\" >\n                    <br-form ref=\"addform\" :persist-state=\"true\" name=\"addip\" class=\"iom-addip\" v-model=\"newIP\" v-bind=\"{schema, onFormErrors, onFormValid}\" submit-text=\"Create new IP\"></br-form>\n                </div>\n            </br-transition>\n        </div>\n    </article>\n\n    <br-transition type=\"group\" name=\"dissolve\" :duration=\".6\" tag=\"ul\">\n        <li v-for=\"(ip, index) in store.ips\" :key=\"ip.name\" class=\"iom-part w-full py-1 lg:py-3 px-4 mt-4\" :data-index=\"index\">\n            <section class=\"shadow relative block border transition-all bg-primary-50 <md:border-primary-200 md:bg-light-200 rounded-lg overflow-hidden\">\n                <h4 class=\"!leading-5 w-full px-2 py-3 border-b bg-gradient-to-r from-primary-400/40 via-primary-300/30 to-primary-400/40 text-primary-900 text-center cursor-default\">\n                    {{ ip.name }} facility in\n                    <br-transition name=\"verticalBlur\">\n                        <span v-if=\"store.selectedSurveyLocation[ip.id]\" :key=\"store.selectedSurveyLocation[ip.id]\" class=\"text-primary-600 group <md:(text-primary-600 cursor-pointer active:text-primary-700 hover:text-primary-500)\" @click=\"toggleLocSelector(index)\">\n                            <span class=\"loc-mark inline-block  underline underline-primary-300\" >\n                                {{ store.selectedSurveyLocation[ip.id] }}\n                            </span>\n                            <i-fa-solid-chevron-down class=\"relative transform transition-transform  inline-block h-3.5 md:hidden <md:(bottom-0.2 -left-0.5) <md:group-active:scale-90\" />\n                        </span>\n                    </br-transition>\n                </h4>\n\n                <div class=\"md:flex\">\n                    <aside class=\"px-2 transition-all relative flex items-center md:(w-1/3 !h-inherit) <md:(overflow-hidden border-b)\" >\n                        <ul class=\"space-y-3 mt-3 pb-2 mx-auto transform -translate-x-1 \" >\n                            <li v-for=\"loc in ip.locations\" :key=\"loc\" class=\"flex justify-start items-center text-dark-700 font-medium group\" @click=\"store.selectedSurveyLocation[ip.id]=loc\">\n                                <div class=\"br-selbox__stacked--item--inputs cursor-pointer flex items-center\">\n                                    <br-radio :name=\"loc\" :id=\"loc\" :checked=\"store.selectedSurveyLocation[ip.id]==loc\" class=\"flex-shrink-0 !bg-white\" /> \n                                    <div class=\"pl-2 truncate group-hover:text-dark-500 \"> {{ loc }}</div>\n                                </div>\n                            </li>\n                        </ul>\n                    </aside>\n\n                    <section class=\"w-full divide-y-1 border-l bg-white border-dark-200 h-full children:(h-full relative transition-all flex-col px-3 py-5 items-start w-full text-black)\">\n                        <div v-for=\"survey in store.surveyTypes\" :key=\"survey.key\" :class=\"survey.key !== 'benef' ? 'cursor-pointer transition-colors duration-300 hover:bg-primary-50/70 group' : ''\" @click=\"survey.key == 'benef' ? () => {} : openSurvey(ip, survey)\">\n\n                            <i-carbon-arrow-up-right v-if=\"survey.key !== 'benef'\" class=\"text-dark-500/60 absolute m-3 top-0 right-0\" />\n\n                            <br-transition v-if=\"survey.key !== 'benef'\" name=\"horizontalBlur\">\n                                <template v-if=\"store.getSurveyStatus(ip.id, survey.key) == 'ok'\">\n                                    <div class=\"px-3 -ml-px mb-2 mr-6 w-content h-content text-2xs bg-success-100 border border-success-200 text-success-600 rounded-full\">\n                                        <div class=\"group-hover:text-success-700\">Completed</div>\n                                    </div>\n                                </template>\n                                <template v-else>\n                                    <div class=\"px-3 -ml-px mb-2 mr-6 w-content h-content text-2xs bg-warning-100 border border-warning-200 text-warning-600 rounded-full\">\n                                        <div class=\"group-hover:text-warning-700\">Pending</div>\n                                    </div>\n                                </template>\n                            </br-transition>\n\n                            <br-transition v-else name=\"horizontalBlur\">\n                                <template v-if=\"store.getBenefSurveys(ip.id).length >= 1\">\n                                    <div class=\"px-3 -ml-px mb-2 mr-6 w-content h-content text-2xs bg-primary-100 border border-primary-200 text-primary-600 rounded-full\">\n                                        <div class=\"group-hover:text-primary-700\">Completed {{ store.getBenefSurveys(ip.id).length }} of 3</div>\n                                    </div>\n                                </template>\n                                <template v-else>\n                                    <div class=\"px-3 -ml-px mb-2 mr-6 w-content h-content text-2xs bg-warning-100 border border-warning-200 text-warning-600 rounded-full\">\n                                        <div class=\"group-hover:text-warning-700\">Pending</div>\n                                    </div>\n                                </template>\n                            </br-transition>\n                            <div class=\"flex \">\n                                <span class=\"underline-primary-600/30 underline underline-2px mr-2\">\n                                    {{ survey.title }}\n                                </span>\n                            </div>\n                            <span class=\"flex text-dark-500 !text-xs mt-1 transition-colors\">\n                                {{ survey.desc }}\n                            </span>\n                            <section v-if=\"survey.key == 'benef'\" class=\"mt-8\">\n                                <div>\n                                    <ul class=\"space-y-3 children:(rounded flex items-center text-xs py-2 px-3 bg-dark-100 shadow transition-all duration-200)\">\n                                        <li v-for=\"benef in store.getBenefSurveys(ip.id)\" :key=\"benef.id\" class=\"hover:(bg-light-200 cursor-pointer) active:(shadow-sm) relative\" @click=\"openSurvey(ip, survey)\">\n                                            <i-wpf-survey class=\"w-4 h-4 mr-3\" />Survey from <span class=\"ml-1 font-medium\">{{ formatDate(benef.date || benef.inter_date) }}</span>\n                                            <i-entypo-chevron-right class=\"absolute right-2 text-slate-400\"/>\n                                        </li>\n                                        <li @click=\"openSurvey(ip, survey, {empty: true})\" class=\"!bg-white border border-dashed !shadow-none font-medium border-dark-300 justify-center hover:(cursor-pointer border-solid border-primary-200 text-primary-600 !bg-primary-50)\">\n                                            <i-bi-plus-circle /> <span class=\"ml-2\">Add new questionnaire</span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </section>\n                        </div>\n                    </section>\n\n                </div>\n            </section>\n        </li>\n    </br-transition>\n</section>\n</template>\n\n<script setup>\nimport {array, string} from 'yup'\nimport {useRouter} from 'vue-router'\nimport { ref, onMounted } from \"vue\"\nimport { useStore } from '../store'\nimport gsap from 'gsap'\nimport { useWindowSize } from '@vueuse/core'\nimport { submitIP } from '../http'\n\n\nconst store = useStore()\n\nconst { width } = useWindowSize()\n\nconst mode = ref('') // or edit\nconst newIP = ref(null)\nconst addIP = ref(null)\nconst addform = ref(null)\nconst dynCities = ref([])\nconst choicesLoading = ref(true)\n\nconst router = useRouter()\n\nconst heightMap = {}\n\nconst toggleLocSelector = index => {\n    if (width.value >= 768) return\n    const t = document.querySelector(`.iom-impl-par .iom-part:nth-child(${index+1}) aside`)\n    const currentH = t.offsetHeight\n    const duration = .1\n    const ease = 'back.out(2)'\n    if (!currentH) {\n        return gsap.to(t, {duration, height: heightMap[index]})\n    }\n    gsap.to(t, {duration, height: 0})\n}\n\nconst onFormValid = async (values, {setErrors, notify}) => {\n    // insert AJAX code here\n    const resp = await submitIP(values)\n    if (resp.status === 200) {\n        values['id'] = resp.data.id // from AJAX in real world scenario\n        mode.value = ''\n        store.$patch(state => {\n            state.ips.unshift(values)\n        })\n    }\n}\n\nconst formatDate = val => {\n    const format = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    }\n    val = new Date(val)\n    return val.toLocaleDateString(undefined, format)\n}\n\nconst openSurvey = ({id}, {key}, opts={}) => {\n    const {empty} = opts\n    const ip = id\n    const location = store.selectedSurveyLocation[ip]\n    const query = {\n        loc: location\n    }\n    if (!empty) {\n        const surveyToFetch = store.surveys.find(sur => sur.survey == key && sur.ip == ip && sur.location == location)\n        if (surveyToFetch) query.id = surveyToFetch.id\n    }\n        \n    router.push({\n        name: `${key}-survey`,\n        params: {\n            ip\n        },\n        query\n    })\n}\n\nconst onFormErrors = () => {}\n\nconst fetchAndUpdateTowns = async (data={}) => {\n    choicesLoading.value = true\n    const where = encodeURIComponent(JSON.stringify({\n        \"population\": {\n            \"$gt\": 10000\n        },\n        ...data\n    }))\n    const response = await fetch(\n        `https://parseapi.back4app.com/classes/greeceCities_List_of_Greek_cities?limit=10&order=-population&keys=name&where=${where}`,\n        {\n        headers: {\n            'X-Parse-Application-Id': '7ULzjba6mbRxuCi9O3umzEUnVhI5fcO14LCJlWeQ', // This is your app's application id\n            'X-Parse-REST-API-Key': 'pOJV0euvADHJohCkybQkmxBb9oypFnztrcbOZ8zx', // This is your app's REST API key\n        }\n        }\n    )\n    try {\n        const res = await response.json()\n        if (res && res.results) {\n            dynCities.value = res.results.map(item => item.name).sort()\n        }\n    }\n    finally {\n        choicesLoading.value = false\n    }\n}\n\nonMounted(async () => {\n    window.store = store\n    document.querySelectorAll(`.iom-impl-par aside`).forEach((el, index) => {\n        heightMap[index] = el.offsetHeight\n        el.style.height = 0\n    })\n    await fetchAndUpdateTowns()\n    if (width.value >= 768) return\n})\n\nconst openNewIPForm = async () => {\n    if (mode.value === 'add') return\n    mode.value = 'add'\n}\n\nconst schema = {\n    form: {\n        type: 'stacked-int',\n        save: 'perForm'\n    },\n    fields: [\n        {\n            name: 'name',\n            label: 'Implementing Partner\\'s Name',\n            type: 'text',\n            parentClasses: 'br-span-full',\n            rules: string().required(),\n            placeholder: \"Red Cross\",\n        },\n        {\n            name: 'locations',\n            section: 'aux',\n            label: \"Enter IP's locations\",\n            rules: array().min(1).required().of(string()),\n            type: 'tagger',\n            parentClasses: 'br-span-full',\n            helpText: 'Select city locations of this IP\\'s facilities by typing in the city name, followed by comma or Enter',\n            extra: {\n                enableHints: true,\n                choicesLoading,\n                choices: dynCities,\n                onSearchInput: async (str, matchingChoicesCount) => {\n                    if (matchingChoicesCount == 0) {\n                        // fetch more results\n                        await fetchAndUpdateTowns({\n                            name: { \"$regex\": str }\n                        })\n                    }\n                }\n                // enableHints: true,\n                // choices: dynCities,\n                // onSearchInput: async (str, matchingChoicesCount) => {\n                //     if (matchingChoicesCount == 0) {\n                //         await fetchAndUpdateTowns({\n                //             name: { \"$regex\": str }\n                //         })\n                //     }\n                // }\n            }\n        }\n    ]\n}\n\n\n</script>\n\n<style lang=\"css\">\n.iom-addip.br-form > section {\n    grid-column: span  12 !important;\n}\n.iom-addip.br-form .br-form--submit {\n    @apply mt-8;\n}\n</style>"],"names":["gsap","string","array"],"mappings":"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"}