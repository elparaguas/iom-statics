import{_ as z}from"./map-pin-fill.8b0b6c48.js";import{o as v,c as h,a as y,p as M,a3 as D,u as V,q as k,f as $,z as b,t as x,i as R,h as g,x as j,a4 as E,w as q,R as I,F,a5 as B,a6 as A,a7 as L,N as U,a8 as Y}from"./index.cd761083.js";import{a as G}from"./BrForm.64468f40.js";const H={width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24"},J=y("path",{fill:"currentColor",d:"M16.62 2.99a1.25 1.25 0 0 0-1.77 0L6.54 11.3a.996.996 0 0 0 0 1.41l8.31 8.31c.49.49 1.28.49 1.77 0s.49-1.28 0-1.77L9.38 12l7.25-7.25c.48-.48.48-1.28-.01-1.76z"},null,-1),K=[J];function P(e,o){return v(),h("svg",H,K)}var Q={name:"ic-round-arrow-back-ios",render:P};const W={class:"sticky top-0 rounded-t-lg z-1000 py-3 lg:py-3 px-4 border-b border-light-900 font-medium bg-slate-50 block <md:border-dark-400"},X={class:"flex items-center justify-between flex-nowrap"},Z={class:"flex items-center"},ee={key:0},te={class:"uppercase tracking-wider text-xs text-slate-900"},se={class:"flex items-center text-xs mt-1 text-slate-500 font-normal justify-self-end"},re=y("div",{class:"absolute w-full h-3 bg-transparent left-0 bottom-0",style:{"box-shadow":"0 14px 20px #fff"}},null,-1),me={__name:"CardNav",setup(e){const o=M(),t=D(),c=V(),r=k(()=>{const{ip:n}=t.params,{loc:a}=t.query,{name:d}=o.ips.find(({id:f})=>f==n)||{};return{ip:d,loc:a}});return(n,a)=>{const d=Q,f=E,i=z;return v(),h("nav",W,[y("div",X,[y("div",Z,[$(d,{class:"cursor-pointer text-dark-700/80 rounded-full transform hover:bg-dark-200/60 hover:text-dark-500 active:bg-dark-300/60 active:text-dark-700 active:scale-90 md:h-9 md:p-1.8 md:w-9 mr-4",onClick:a[0]||(a[0]=s=>b(c).back())}),b(o).ui.menu==="full"?(v(),h("div",ee,[y("span",te,x(b(t).meta.crumb),1)])):R("",!0)]),y("div",se,[$(f,{class:"h-5 w-5 md:mr-1.5 text-dark-500/90"}),g(" "+x(b(r).ip)+" ",1),b(t).name!=="staff-form"?(v(),j(i,{key:0,class:"ml-2 md:ml-5 md:mr-1.5 h-5 w-5 text-dark-500/90"})):R("",!0),g(" "+x(b(r).loc),1)])]),re])}}},oe=g(" Cancel "),fe={__name:"FormFooter",props:["formMode","meta","isSubmitting","submitText","submittingText"],setup(e){const o=V();return(t,c)=>{const r=G;return v(),h(F,null,[$(r,{class:"br-btn--alt br-form--submit-btn",onClick:c[0]||(c[0]=I(n=>b(o).push({name:"overview"}),["prevent"]))},{default:q(()=>[oe]),_:1}),e.formMode==="perForm"?(v(),j(r,{key:0,class:"br-btn--main br-form--submit-btn",type:"submit",disabled:e.meta.touched&&!e.meta.valid,loading:e.isSubmitting},{default:q(()=>[e.isSubmitting?(v(),h(F,{key:1},[g(x(e.submittingText),1)],64)):(v(),h(F,{key:0},[g(x(e.submitText),1)],64))]),_:1},8,["disabled","loading"])):R("",!0)],64)}}},p=M(),S={field:"fieldvisitsurvey/",staff:"staffsurvey/",benef:"benefsurvey/"},ae=e=>async({values:o,errors:t,results:c,notify:r})=>{const n=document.querySelectorAll(".br-errored");r(`This form contains <b>${n.length}</b> fields with errors`,"Cannot proceed before all fields containing errors are corrected.","danger"),setTimeout(()=>{window.scrollBy({top:n[0].getBoundingClientRect().top-150,behavior:"smooth"})},1500)},ne=(e,o)=>async(t,{setErrors:c,notify:r})=>{const n=o.currentRoute.value,{ip:a}=n.params,{loc:d}=n.query;t.ip=a,t.location=d;const f=S[e],i=await L(f,t);if(i.status===422)c(i.data);else if(i.status>=400)r(i.data,null,"danger");else if(i.status===200){const{id:s}=i.data;r("Form saved successfully.",null,"success"),p.$patch(u=>{u.surveys.push({...t,id:s,survey:e,fetched:!0})}),setTimeout(()=>{o.push({name:"overview"})},1e3)}},ce=(e,o,t)=>async(c,{value:r,setSuccessText:n,setError:a})=>{await B(.3);const d=o.currentRoute.value.query.id||o.currentRoute.value.params.ip,f=t.includes(c)?"put":"patch",i=S[e],s=await A(i,{select:{id:d},payload:{[c]:r}},f);if(s.status>=400)return a(s.data);p.$patch(u=>{const l=u.surveys.find(m=>m.id==d);l&&(l[c]=r,l.fetched=!0)}),n("Field has been updated successfully")},ie=(e,o,t,c,r)=>{const n=k(()=>{const s=t.currentRoute.value;if(!s)return"";const{ip:u}=s.params;if(s.name=="staff-form")return`${s.name}-${u}`;const{loc:l}=s.query;return`${s.name}-${u}-${l}`});let a=[...o.value];const d=k(()=>{const s=t.currentRoute.value;if(!n.value)return;if(s.name==="staff-form")return p.getSurveyStatus(s.params.ip,"staff")?"perField":"perForm";const{id:u}=s.query;return u?"perField":"perForm"}),f=k(()=>p.isObserver?"stacked-disjoint":"stacked"),i=s=>{const u=Object.entries(s);p.isObserver&&(a=a.map(l=>{const m=s[l.name];return m===null||typeof m=="object"&&Object.keys(m).length,l}));for(let[l,m]of u)c.value[l]=m};return U(d,async s=>{if(s==="perField"){await B(.8),r.value=!0;const u=t.currentRoute.value,l=u.query.id||u.params.ip,m=p.surveys.filter(_=>_.fetched).find(_=>_.id==l);if(m)return r.value=!1,i(m);const N=S[e]+"getall/",C=await Y(N,l);if(C.status===200){const{data:_}=C;p.$patch(w=>{const T=w.surveys.findIndex(({id:O})=>O==_.id);w.surveys[T]={...w.surveys[T]||{},..._}}),i(_),r.value=!1}}},{immediate:!0}),{saveMode:d,formName:n,formType:f,fields:a}},pe=(e,o,t,c,r)=>{const n=o.value.filter(({rules:a})=>a.type==="array"||a.type==="object").map(a=>a.name);return{formControls:{onFormErrors:ae(),onFieldValid:ce(e,t,n),onFormValid:ne(e,t),readonly:p.isObserver},...ie(e,o,t,c,r)}};export{fe as _,me as a,pe as u};
