{"version":3,"file":"composables.a7435b91.js","sources":["../../src/views/surveys/FormFooter.vue","../../src/views/surveys/CardNav.vue","../../src/views/surveys/composables.js"],"sourcesContent":["<template>\n    <br-button class=\"br-btn--alt br-form--submit-btn\" @click.prevent=\"router.push({name: 'ip'})\">\n        Cancel\n    </br-button>\n    <br-button v-if=\"formMode === 'perForm'\" class=\"br-btn--main br-form--submit-btn\" type=\"submit\" :disabled=\"meta.touched && !meta.valid\" :loading=\"isSubmitting\">\n        <template v-if=\"!isSubmitting\">\n            {{ submitText }}\n        </template>\n        <template v-else>\n            {{ submittingText }}\n        </template>\n    </br-button>\n</template>\n\n<script setup>\nimport {useRouter} from 'vue-router'\nconst router = useRouter()\nconst props = defineProps(['formMode', 'meta', 'isSubmitting', 'submitText', 'submittingText'])\n</script>","<template>\n    <nav class=\"sticky rounded-t-lg top-0 z-1000 py-3 lg:py-3 px-4 border-b border-light-900 font-medium bg-slate-50 block <md:border-dark-400\" >\n        <div class=\"flex items-center justify-between flex-nowrap\">\n            <div class=\"flex items-center\">\n                <i-ic-round-arrow-back-ios class=\"hidden md:block cursor-pointer text-dark-700/80 rounded-full transform hover:(bg-dark-200/60 text-dark-500) active:(bg-dark-300/60 text-dark-700 scale-90) h-9 p-1.8 w-9 mr-4\" @click=\"router.push({name: 'ip'})\" />\n                <div class=\"\">\n                    <span class=\"uppercase tracking-wider text-xs text-slate-900\">\n                        {{route.meta.crumb}}\n                    </span>\n                </div>\n            </div>\n            <div class=\"flex items-center text-xs mt-1 text-slate-500 font-normal justify-self-end\"> \n                <i-ph-intersect-fill class=\"h-6 w-6 md:mr-1.5 text-dark-500/90\" /> {{surveyDetails.ip }} \n                <i-ph-map-pin-fill class=\"ml-2 md:ml-5 md:mr-1.5 h-5 w-5 text-dark-500/90\" /> {{surveyDetails.loc}}\n            </div>\n        </div>\n        <div class=\"absolute w-full h-3 bg-transparent left-0 bottom-0\" style=\"box-shadow: 0 14px 20px #fff;\"></div>\n    </nav>\n</template>\n\n<script setup>\nimport { computed} from \"vue\"\nimport { useRoute, useRouter } from 'vue-router'\nimport { useStore } from '../../store'\n\nconst store = useStore()\nconst route = useRoute()\nconst router = useRouter()\n\nconst surveyDetails = computed(() => {\n    const {ip} = route.params\n    const {loc} = route.query\n    const {name} = store.ips.find(({id}) => id == ip) || {}\n    return {\n        ip: name,\n        loc\n    }\n})\n\n</script>","import { computed, watch } from 'vue'\nimport { sleep } from '../../@bricks/utils'\nimport { submitForm, patchSurvey, fetchSurvey } from '../../http'\nimport { useStore } from '../../store'\n\nconst store = useStore()\n\nconst URLS = {\n    field: 'fieldvisitsurvey/',\n    staff: 'staffsurvey/',\n    benef: 'benefsurvey/'\n}\n\nconst onFormErrorsFactory = form => async ({ values, errors, results, notify }) => {\n    const errFields = document.querySelectorAll('.br-errored')\n    notify(`This form contains <b>${errFields.length}</b> fields with errors`, 'Cannot proceed before all fields containing errors are corrected.', 'danger')\n    setTimeout(() => {\n        window.scrollBy({ top: errFields[0].getBoundingClientRect().top - 150, behavior: 'smooth' })\n    }, 1500)\n}\n\nconst onFormValidFactory = (form, router) => async (values, { setErrors, notify }) => {\n    const route = router.currentRoute.value\n    const {ip} = route.params\n    const {loc} = route.query\n    values.ip = ip\n    values.location = loc\n\n    const url = URLS[form]\n    \n    const resp = await submitForm(url, values)\n\n    if (resp.status === 422) {\n        setErrors(resp.data)\n    }\n\n    else if (resp.status >= 400) {\n        notify(resp.data, null, 'danger')\n    }\n    \n    else if (resp.status === 200) {\n        const {id} = resp.data\n        notify(\"Form saved successfully.\", null, 'success')\n        store.$patch(state => {\n            state.surveys.push({\n                ...values,\n                id,\n                survey: form,\n                fetched: true\n            })\n        })\n        setTimeout(() => {\n            router.push({name: 'ip'})\n        }, 1000)\n    }\n}\n\nconst onFieldValidFactory = (form, router) => async (name, { value, setSuccessText, setError }) => {\n    await sleep(.3)\n    const {id} = router.currentRoute.value.query\n    const url = URLS[form]\n    const resp = await patchSurvey(url, {\n        select: {id},\n        payload: {\n            [name]: value\n        }\n    })\n    if (resp.status >= 400) {\n        return setError(resp.data)\n    }\n    store.$patch(state => {\n        const survey = state.surveys.find((sur) => sur.id == id)\n        if (survey) {\n            survey[name] = value\n            survey.fetched = true\n        }\n    })\n    setSuccessText(`Field has been updated successfully`)\n}\n\n\nconst primitivesFactory = (form, router, surveyData, isLoading) => {\n    const formName = computed(() => {\n        const route = router.currentRoute.value\n        if (!route) return ''\n        const { ip } = route.params\n        const { loc } = route.query\n        return `${route.name}-${ip}-${loc}`\n    })\n    \n    const saveMode = computed(() => {\n        const route = router.currentRoute.value\n        if (!formName.value) return\n        const { id } = route.query\n        return id ? 'perField' : 'perForm'\n    })\n    \n    const populateModel = data => {\n        const entries = Object.entries(data)\n        for (let [key, val] of entries) {\n            surveyData.value[key] = val\n        }\n    }\n    \n    watch(saveMode, async val => {\n        if (val === 'perField') {\n            await sleep(.3)\n            isLoading.value = true\n            \n            const route = router.currentRoute.value\n            // try to find the cached version first before making a request\n            const cachedSurvey = store.surveys.filter(i => i.fetched).find(i => i.id == route.query.id)\n            if (cachedSurvey) {\n                isLoading.value = false\n                return populateModel(cachedSurvey)\n            }\n    \n            const url = URLS[form] + 'getall/'\n            const resp = await fetchSurvey(url, route.query.id)\n    \n            if (resp.status === 200) {\n                const { data } = resp\n                store.$patch(state => {\n                    const index = state.surveys.findIndex(({ id }) => id == data.id)\n                    state.surveys[index] = { ...(state.surveys[index] || {}), ...data }\n                })\n                populateModel(data)\n                isLoading.value = false\n            }\n        }\n    }, { immediate: true })\n\n    return {saveMode, formName}\n\n}\n\nexport const useIomForm = (form, router, surveyData, isLoading) => {\n    return {\n        formControls: {\n            onFormErrors: onFormErrorsFactory(form),\n            onFieldValid: onFieldValidFactory(form, router),\n            onFormValid: onFormValidFactory(form, router)\n        },\n        ...primitivesFactory(form, router, surveyData, isLoading)\n    }\n}\n\n"],"names":[],"mappings":"gWAgBA,KAAA,GAAA,EAAA,0vECSA,KAAA,GAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,EAAA,EAEA,EAAA,EAAA,IAAA,CACA,KAAA,CAAA,MAAA,EAAA,OACA,CAAA,OAAA,EAAA,MACA,CAAA,QAAA,EAAA,IAAA,KAAA,CAAA,CAAA,QAAA,GAAA,CAAA,GAAA,CAAA,EACA,MAAA,CACA,GAAA,EACA,KACA,CACA,CAAA,sjBChCM,EAAQ,EAAU,EAElB,EAAO,CACT,MAAO,oBACP,MAAO,eACP,MAAO,cACX,EAEM,GAAsB,GAAQ,MAAO,CAAE,SAAQ,SAAQ,UAAS,YAAa,CAC/E,KAAM,GAAY,SAAS,iBAAiB,aAAa,EACzD,EAAO,yBAAyB,EAAU,gCAAiC,oEAAqE,QAAQ,EACxJ,WAAW,IAAM,CACb,OAAO,SAAS,CAAE,IAAK,EAAU,GAAG,sBAAqB,EAAG,IAAM,IAAK,SAAU,QAAQ,CAAE,CAC9F,EAAE,IAAI,CACX,EAEM,GAAqB,CAAC,EAAM,IAAW,MAAO,EAAQ,CAAE,YAAW,YAAa,CAClF,KAAM,GAAQ,EAAO,aAAa,MAC5B,CAAC,MAAM,EAAM,OACb,CAAC,OAAO,EAAM,MACpB,EAAO,GAAK,EACZ,EAAO,SAAW,EAElB,KAAM,GAAM,EAAK,GAEX,EAAO,KAAM,GAAW,EAAK,CAAM,EAEzC,GAAI,EAAK,SAAW,IAChB,EAAU,EAAK,IAAI,UAGd,EAAK,QAAU,IACpB,EAAO,EAAK,KAAM,KAAM,QAAQ,UAG3B,EAAK,SAAW,IAAK,CAC1B,KAAM,CAAC,MAAM,EAAK,KAClB,EAAO,2BAA4B,KAAM,SAAS,EAClD,EAAM,OAAO,GAAS,CAClB,EAAM,QAAQ,KAAK,CACf,GAAG,EACH,KACA,OAAQ,EACR,QAAS,EACzB,CAAa,CACb,CAAS,EACD,WAAW,IAAM,CACb,EAAO,KAAK,CAAC,KAAM,IAAI,CAAC,CAC3B,EAAE,GAAI,CACV,CACL,EAEM,GAAsB,CAAC,EAAM,IAAW,MAAO,EAAM,CAAE,QAAO,iBAAgB,cAAe,CAC/F,KAAM,GAAM,EAAE,EACd,KAAM,CAAC,MAAM,EAAO,aAAa,MAAM,MACjC,EAAM,EAAK,GACX,EAAO,KAAM,GAAY,EAAK,CAChC,OAAQ,CAAC,IAAE,EACX,QAAS,CACL,CAAC,GAAO,CACX,CACT,CAAK,EACD,GAAI,EAAK,QAAU,IACf,MAAO,GAAS,EAAK,IAAI,EAE7B,EAAM,OAAO,GAAS,CAClB,KAAM,GAAS,EAAM,QAAQ,KAAK,AAAC,GAAQ,EAAI,IAAM,CAAE,EACvD,AAAI,GACA,GAAO,GAAQ,EACf,EAAO,QAAU,GAE7B,CAAK,EACD,EAAe,qCAAqC,CACxD,EAGM,GAAoB,CAAC,EAAM,EAAQ,EAAY,IAAc,CAC/D,KAAM,GAAW,EAAS,IAAM,CAC5B,KAAM,GAAQ,EAAO,aAAa,MAClC,GAAI,CAAC,EAAO,MAAO,GACnB,KAAM,CAAE,MAAO,EAAM,OACf,CAAE,OAAQ,EAAM,MACtB,MAAO,GAAG,EAAM,QAAQ,KAAM,GACtC,CAAK,EAEK,EAAW,EAAS,IAAM,CAC5B,KAAM,GAAQ,EAAO,aAAa,MAClC,GAAI,CAAC,EAAS,MAAO,OACrB,KAAM,CAAE,MAAO,EAAM,MACrB,MAAO,GAAK,WAAa,SACjC,CAAK,EAEK,EAAgB,GAAQ,CAC1B,KAAM,GAAU,OAAO,QAAQ,CAAI,EACnC,OAAS,CAAC,EAAK,IAAQ,GACnB,EAAW,MAAM,GAAO,CAE/B,EAED,SAAM,EAAU,KAAM,IAAO,CACzB,GAAI,IAAQ,WAAY,CACpB,KAAM,GAAM,EAAE,EACd,EAAU,MAAQ,GAElB,KAAM,GAAQ,EAAO,aAAa,MAE5B,EAAe,EAAM,QAAQ,OAAO,GAAK,EAAE,OAAO,EAAE,KAAK,GAAK,EAAE,IAAM,EAAM,MAAM,EAAE,EAC1F,GAAI,EACA,SAAU,MAAQ,GACX,EAAc,CAAY,EAGrC,KAAM,GAAM,EAAK,GAAQ,UACnB,EAAO,KAAM,GAAY,EAAK,EAAM,MAAM,EAAE,EAElD,GAAI,EAAK,SAAW,IAAK,CACrB,KAAM,CAAE,QAAS,EACjB,EAAM,OAAO,GAAS,CAClB,KAAM,GAAQ,EAAM,QAAQ,UAAU,CAAC,CAAE,QAAS,GAAM,EAAK,EAAE,EAC/D,EAAM,QAAQ,GAAS,CAAE,GAAI,EAAM,QAAQ,IAAU,GAAK,GAAG,CAAM,CACvF,CAAiB,EACD,EAAc,CAAI,EAClB,EAAU,MAAQ,EACrB,CACJ,CACT,EAAO,CAAE,UAAW,GAAM,EAEf,CAAC,WAAU,UAAQ,CAE9B,EAEa,GAAa,CAAC,EAAM,EAAQ,EAAY,IAC1C,EACH,aAAc,CACV,aAAc,GAAwB,EACtC,aAAc,GAAoB,EAAM,CAAM,EAC9C,YAAa,GAAmB,EAAM,CAAM,CAC/C,EACD,GAAG,GAAkB,EAAM,EAAQ,EAAY,CAAS,CAC3D"}